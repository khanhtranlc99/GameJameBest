using Game.Items;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Game.Shop
{
	[Serializable]
	public class Loadout
	{
		private const int fromBase = 10;

		public static string WeaponsKeyPrefix = "WeaponSlot";

		public Dictionary<string, int> Weapons = new Dictionary<string, int>();

		public Dictionary<string, int> Skin = new Dictionary<string, int>
		{
			{
				"HeadID",
				0
			},
			{
				"FaceID",
				0
			},
			{
				"BodyID",
				0
			},
			{
				"ArmsID",
				0
			},
			{
				"ForearmsID",
				0
			},
			{
				"HandsID",
				0
			},
			{
				"UpperLegsID",
				0
			},
			{
				"LowerLegsID",
				0
			},
			{
				"FootsID",
				0
			},
			{
				"HatID",
				0
			},
			{
				"GlassID",
				0
			},
			{
				"MaskID",
				0
			},
			{
				"LeftBraceletID",
				0
			},
			{
				"RightBraceletID",
				0
			},
			{
				"LeftHuckleID",
				0
			},
			{
				"RightHuckleID",
				0
			},
			{
				"LeftPalmID",
				0
			},
			{
				"RightPalmID",
				0
			},
			{
				"LeftToeID",
				0
			},
			{
				"RightToeID",
				0
			},
			{
				"ExternalBodyID",
				0
			},
			{
				"ExternalForearmsID",
				0
			},
			{
				"ExternalFootsID",
				0
			}
		};

		public int[] ActiveSuperpowers = new int[3];

		public int[] PasiveSuperpowers = new int[5];

		public static Dictionary<SkinSlot, string> KeyFromSkinSlot = new Dictionary<SkinSlot, string>
		{
			{
				SkinSlot.Head,
				"HeadID"
			},
			{
				SkinSlot.Face,
				"FaceID"
			},
			{
				SkinSlot.Body,
				"BodyID"
			},
			{
				SkinSlot.Arms,
				"ArmsID"
			},
			{
				SkinSlot.Forearms,
				"ForearmsID"
			},
			{
				SkinSlot.Hands,
				"HandsID"
			},
			{
				SkinSlot.Thighs,
				"UpperLegsID"
			},
			{
				SkinSlot.Shins,
				"LowerLegsID"
			},
			{
				SkinSlot.Foots,
				"FootsID"
			},
			{
				SkinSlot.Hat,
				"HatID"
			},
			{
				SkinSlot.Glass,
				"GlassID"
			},
			{
				SkinSlot.Mask,
				"MaskID"
			},
			{
				SkinSlot.LeftBracelet,
				"LeftBraceletID"
			},
			{
				SkinSlot.RightBracelet,
				"RightBraceletID"
			},
			{
				SkinSlot.LeftHuckle,
				"LeftHuckleID"
			},
			{
				SkinSlot.RightHuckle,
				"RightHuckleID"
			},
			{
				SkinSlot.LeftPalm,
				"LeftPalmID"
			},
			{
				SkinSlot.RightPalm,
				"RightPalmID"
			},
			{
				SkinSlot.LeftToe,
				"LeftToeID"
			},
			{
				SkinSlot.RightToe,
				"RightToeID"
			},
			{
				SkinSlot.ExternalBody,
				"ExternalBodyID"
			},
			{
				SkinSlot.ExternalForearms,
				"ExternalForearmsID"
			},
			{
				SkinSlot.ExternalFoots,
				"ExternalFootsID"
			}
		};

		public static Dictionary<string, SkinSlot> SkinSlotFromKey = new Dictionary<string, SkinSlot>
		{
			{
				"HeadID",
				SkinSlot.Head
			},
			{
				"FaceID",
				SkinSlot.Face
			},
			{
				"BodyID",
				SkinSlot.Body
			},
			{
				"ArmsID",
				SkinSlot.Arms
			},
			{
				"ForearmsID",
				SkinSlot.Forearms
			},
			{
				"HandsID",
				SkinSlot.Hands
			},
			{
				"UpperLegsID",
				SkinSlot.Thighs
			},
			{
				"LowerLegsID",
				SkinSlot.Shins
			},
			{
				"FootsID",
				SkinSlot.Foots
			},
			{
				"HatID",
				SkinSlot.Hat
			},
			{
				"GlassID",
				SkinSlot.Glass
			},
			{
				"MaskID",
				SkinSlot.Mask
			},
			{
				"LeftBraceletID",
				SkinSlot.LeftBracelet
			},
			{
				"RightBraceletID",
				SkinSlot.RightBracelet
			},
			{
				"LeftHuckleID",
				SkinSlot.LeftHuckle
			},
			{
				"RightHuckleID",
				SkinSlot.RightHuckle
			},
			{
				"LeftPalmID",
				SkinSlot.LeftPalm
			},
			{
				"RightPalmID",
				SkinSlot.RightPalm
			},
			{
				"LeftToeID",
				SkinSlot.LeftToe
			},
			{
				"RightToeID",
				SkinSlot.RightToe
			},
			{
				"ExternalBodyID",
				SkinSlot.ExternalBody
			},
			{
				"ExternalForearmsID",
				SkinSlot.ExternalForearms
			},
			{
				"ExternalFootsID",
				SkinSlot.ExternalFoots
			}
		};

		public List<int> AllValues
		{
			get
			{
				List<int> list = Skin.Values.ToList();
				list.AddRange(Weapons.Values.ToList());
				return list;
			}
		}

		public static string KeyFromWeaponSlot(int slotIndex)
		{
			return WeaponsKeyPrefix + slotIndex;
		}

		public static int WeaponSlotFromKey(string key)
		{
			return Convert.ToInt32(key.Substring(WeaponsKeyPrefix.Length), 10);
		}
	}
}
